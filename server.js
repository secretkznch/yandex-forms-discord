const express = require('express');
const axios = require('axios');

const app = express();

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–∞ —Ñ–æ—Ä–º–∞—Ç–∞: JSON –∏ form-data
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –æ—Ç –Ø–Ω–¥–µ–∫—Å.–§–æ—Ä–º
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
  res.header('Access-Control-Allow-Headers', 'Content-Type');
  next();
});

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º
const FORM_CONFIGS = {
  // –ü–µ—Ä–≤–∞—è —Ñ–æ—Ä–º–∞ (–¥–æ–∫—É–º–µ–Ω—Ç—ã)
  'documents': {
    webhookUrl: process.env.DISCORD_WEBHOOK_DOCUMENTS,
    title: 'üìã –ù–æ–≤—ã–π —Å–µ–π—Ñ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤!',
    username: '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥–≤–∞—Ä–¥–∏—è',
    roleIds: [
      process.env.DISCORD_ROLE_DOCUMENTS_1,
      process.env.DISCORD_ROLE_DOCUMENTS_2
    ],
    fieldMapping: {
      'answer_short_text_9008960333946404': 'üî¢ DiscordID',
      'answer_short_text_9008960334233112': 'üë§ –ò–º—è –∏ –§–∞–º–∏–ª–∏—è', 
      'answer_short_text_9008960334390140': 'üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è',
      'answer_short_text_9008960334768364': 'üìù –ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞',
      'answer_short_text_9008960334786320': 'üì∑ –ö—Å–µ—Ä–æ–∫–æ–ø–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
      'answer_choices_9008960334810020': 'üíç –°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ',
      'answer_choices_9008960334862248': '‚ö§ –¢–∏–ø –ø–æ–ª–∞',
      'answer_short_text_9008960334876588': 'üìû –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
      'answer_short_text_9008960335425980': 'üìß –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞',
      'answer_short_text_9008960379742124': 'üì∑ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ª–∏—Ü–∞'
    }
  },
  // –í—Ç–æ—Ä–∞—è —Ñ–æ—Ä–º–∞ (—É–≤–æ–ª—å–Ω–µ–Ω–∏–µ)
  'dismissal': {
    webhookUrl: process.env.DISCORD_WEBHOOK_DISMISSAL,
    title: 'üö™ –†–∞–ø–æ—Ä—Ç –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ',
    username: '–û—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤',
    // ‚ö†Ô∏è –ó–ê–ú–ï–ù–ò –ù–ê –†–ï–ê–õ–¨–ù–´–ô ID –ü–û–õ–Ø "–ü–û–î–†–ê–ó–î–ï–õ–ï–ù–ò–ï"
    departmentFieldId: 'answer_choices_9008960389129240',
    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Ä–æ–ª–∏ –¥–ª—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π
    departmentRoles: {
      'fpf': [process.env.DISCORD_ROLE_FPF_1, process.env.DISCORD_ROLE_FPF_2],
      'ssf': [process.env.DISCORD_ROLE_SSF_1, process.env.DISCORD_ROLE_SSF_2],
      'soar': [process.env.DISCORD_ROLE_SOAR_1, process.env.DISCORD_ROLE_SOAR_2],
      'mp': [process.env.DISCORD_ROLE_MP_1, process.env.DISCORD_ROLE_MP_2],
      'mta': [process.env.DISCORD_ROLE_MTA_1, process.env.DISCORD_ROLE_MTA_2],
      'academy': [process.env.DISCORD_ROLE_ACADEMY_1, process.env.DISCORD_ROLE_ACADEMY_2]
    },
    // –†–æ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    defaultRoleIds: [process.env.DISCORD_ROLE_DISMISSAL_1, process.env.DISCORD_ROLE_DISMISSAL_2],
    fieldMapping: {
      // ‚ö†Ô∏è –ó–ê–ú–ï–ù–ò –ù–ê –†–ï–ê–õ–¨–ù–´–ï ID –ü–û–õ–ï–ô –§–û–†–ú–´ –£–í–û–õ–¨–ù–ï–ù–ò–Ø
      'answer_short_text_9008960389075612': 'üë§ –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è',
      'answer_short_text_9008960398320230': 'üî¢ DiscordID',
      'answer_short_text_9008960389101858': 'üìù –ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞',
      'answer_choices_9008960389129240': 'üè¢ –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ',
      'answer_short_text_9008960398199642': 'üì∑ –§–æ—Ç–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è',
      'answer_short_text_9008960398213604': 'üí∞ –§–æ—Ç–æ –æ–ø–ª–∞—Ç—ã –Ω–µ—É—Å—Ç–æ–π–∫–∏',
      'answer_short_text_9008960398285328': 'üìã –ü—Ä–∏—á–∏–Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è'
    }
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Å–ª–æ–∂–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –Ø–Ω–¥–µ–∫—Å.–§–æ—Ä–º
function extractFormData(answersData, fieldMapping) {
  const formData = {};
  let discordId = null;
  let department = null;
  
  if (answersData.answer && answersData.answer.data) {
    const data = answersData.answer.data;
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ –ø–æ–ª–µ
    for (const [fieldId, fieldData] of Object.entries(data)) {
      if (fieldData.value) {
        let fieldValue = fieldData.value;
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞
        if (Array.isArray(fieldValue)) {
          fieldValue = fieldValue.map(item => item.text || item.slug || item.key).join(', ');
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º slug –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
          if (fieldData.value[0] && fieldData.value[0].slug) {
            department = fieldData.value[0].slug;
          }
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º Discord ID –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
        if (fieldId in fieldMapping && fieldMapping[fieldId].includes('DiscordID')) {
          discordId = String(fieldValue).replace('@', '');
        }
        
        // –ë–µ—Ä–µ–º —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º ID
        const fieldName = fieldMapping[fieldId] || fieldId;
        formData[fieldName] = String(fieldValue);
      }
    }
  }
  
  return { formData, discordId, department };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π –ø–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é
function getDepartmentRoles(formType, department) {
  const config = FORM_CONFIGS[formType];
  
  if (!config.departmentRoles || !department) {
    return config.defaultRoleIds || config.roleIds || [];
  }
  
  // –ò—â–µ–º —Ä–æ–ª–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
  for (const [dept, roles] of Object.entries(config.departmentRoles)) {
    if (department.toLowerCase().includes(dept.toLowerCase())) {
      return roles;
    }
  }
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–æ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ
  return config.defaultRoleIds || config.roleIds || [];
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Ñ–æ—Ä–º
function createFormHandler(formType) {
  return async (req, res) => {
    console.log(`üì® –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ—Ç –Ø–Ω–¥–µ–∫—Å.–§–æ—Ä–º—ã (${formType})`);
    
    const config = FORM_CONFIGS[formType];
    if (!config) {
      console.error(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ñ–æ—Ä–º—ã: ${formType}`);
      return res.status(400).json({ error: 'Unknown form type' });
    }

    if (!config.webhookUrl) {
      console.error(`‚ùå –û—à–∏–±–∫–∞: Webhook URL –¥–ª—è —Ñ–æ—Ä–º—ã ${formType} –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω`);
      return res.status(500).json({ error: 'Server configuration error' });
    }
    
    try {
      let formData = {};
      let discordId = null;
      let department = null;
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º JSON-RPC —Ñ–æ—Ä–º–∞—Ç –æ—Ç –Ø–Ω–¥–µ–∫—Å.–§–æ—Ä–º
      if (req.body && req.body.params && req.body.params.answers) {
        try {
          // –ü–∞—Ä—Å–∏–º JSON –∏–∑ answers
          const answersData = JSON.parse(req.body.params.answers);
          console.log('üìä –û—Ç–≤–µ—Ç—ã —Ñ–æ—Ä–º—ã:', JSON.stringify(answersData, null, 2));
          
          // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
          const extracted = extractFormData(answersData, config.fieldMapping);
          formData = extracted.formData;
          discordId = extracted.discordId;
          department = extracted.department;
          console.log('üìã –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', formData);
          console.log('üÜî Discord ID –¥–ª—è —É–ø–æ–º–∏–Ω–∞–Ω–∏—è:', discordId);
          console.log('üè¢ –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:', department);
          
        } catch (parseError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', parseError.message);
          formData = { '‚ùå –û—à–∏–±–∫–∞': '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã' };
        }
      } else {
        // –û–±—ã—á–Ω—ã–π JSON –∑–∞–ø—Ä–æ—Å
        formData = req.body;
        console.log('üìä –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', formData);
      }

      const embed = {
        title: config.title,
        color: formType === 'dismissal' ? 0xFF0000 : 0x00FF00, // –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è —É–≤–æ–ª—å–Ω–µ–Ω–∏—è
        fields: [],
        timestamp: new Date().toISOString(),
        footer: {
          text: '–Ø–Ω–¥–µ–∫—Å.–§–æ—Ä–º—ã ‚Üí Discord'
        }
      };

      // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –≤ Discord —Å–æ–æ–±—â–µ–Ω–∏–µ
      for (const [key, value] of Object.entries(formData)) {
        if (value && value !== '') {
          let displayValue = String(value);
          
          // –ó–∞–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ DiscordID –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ
          if (key.includes('DiscordID') && discordId) {
            displayValue = `<@${discordId}>`;
          }
          
          embed.fields.push({
            name: key,
            value: displayValue.substring(0, 1024),
            inline: key.length < 20
          });
        }
      }

      // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö
      if (embed.fields.length === 0) {
        embed.fields.push({
          name: '‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ',
          value: '–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.',
          inline: false
        });
      }

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–∏–µ —Ä–æ–ª–∏ —É–ø–æ–º–∏–Ω–∞—Ç—å
      let roleIds = [];
      
      if (formType === 'dismissal' && department) {
        // –î–ª—è —Ñ–æ—Ä–º—ã —É–≤–æ–ª—å–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Ä–æ–ª–∏ –ø–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é
        roleIds = getDepartmentRoles(formType, department);
        console.log(`üéØ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ–ª–∏ –¥–ª—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è "${department}":`, roleIds);
      } else {
        // –î–ª—è –¥—Ä—É–≥–∏—Ö —Ñ–æ—Ä–º –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–æ–ª–∏
        roleIds = config.roleIds || [];
        console.log(`‚öôÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–æ–ª–∏:`, roleIds);
      }

      // –°–æ–∑–¥–∞–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ä–æ–ª–µ–π
      const roleMentions = roleIds.filter(roleId => roleId).map(roleId => `<@&${roleId}>`).join(' ');

      const discordPayload = {
        username: config.username,
        content: roleMentions || ' ', // –£–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–µ–π –≤ –Ω–∞—á–∞–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        embeds: [embed]
      };

      console.log(`üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Discord (${formType})...`);
      console.log(`üë• –£–ø–æ–º–∏–Ω–∞–µ–º —Ä–æ–ª–∏: ${roleMentions}`);
      console.log(`üåê Webhook: ${config.webhookUrl}`);
      
      const discordResponse = await axios.post(config.webhookUrl, discordPayload, {
        headers: {
          'Content-Type': 'application/json'
        }
      });

      console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Discord (${formType})!`);
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π JSON-RPC –æ—Ç–≤–µ—Ç
      if (req.body && req.body.jsonrpc) {
        res.status(200).json({
          jsonrpc: "2.0",
          id: req.body.id || null,
          result: { status: "success" }
        });
      } else {
        res.status(200).json({ 
          status: 'success', 
          message: '–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Discord' 
        });
      }

    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ (${formType}):`, error.message);
      
      // JSON-RPC error response
      if (req.body && req.body.jsonrpc) {
        res.status(500).json({
          jsonrpc: "2.0",
          id: req.body.id || null,
          error: { message: error.message }
        });
      } else {
        res.status(500).json({ 
          error: 'Internal Server Error',
          details: error.message 
        });
      }
    }
  };
}

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º
app.post('/webhook/documents', createFormHandler('documents'));
app.post('/webhook/dismissal', createFormHandler('dismissal'));
app.post('/webhook', createFormHandler('documents')); // –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã
app.get('/', (req, res) => {
  res.json({ 
    status: 'OK üëç', 
    service: '–Ø–Ω–¥–µ–∫—Å.–§–æ—Ä–º—ã ‚Üí Discord (Multi-form)',
    availableEndpoints: [
      '/webhook/documents - –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
      '/webhook/dismissal - –¥–ª—è —É–≤–æ–ª—å–Ω–µ–Ω–∏–π (—Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ —Ä–æ–ª—è–º–∏ –ø–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º)',
      '/webhook - –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ (–¥–æ–∫—É–º–µ–Ω—Ç—ã)'
    ]
  });
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
app.get('/health', (req, res) => {
  res.json({ status: 'healthy üè•', timestamp: new Date().toISOString() });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üìç Health check: http://localhost:${PORT}/health`);
  console.log(`üîó Webhook –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: http://localhost:${PORT}/webhook/documents`);
  console.log(`üîó Webhook –¥–ª—è —É–≤–æ–ª—å–Ω–µ–Ω–∏–π: http://localhost:${PORT}/webhook/dismissal`);
});
